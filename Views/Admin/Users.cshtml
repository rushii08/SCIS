@model IEnumerable<SCIS.Models.ApplicationUser>

@{
    ViewData["Title"] = "User Management";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">User Management</h1>
    <a asp-action="CreateUser" class="d-none d-sm-inline-block btn btn-primary shadow-sm">
        <i class="fas fa-user-plus fa-sm text-white-50 me-2"></i>Add New User
    </a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item active" aria-current="page">Users</li>
    </ol>
</nav>

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-users me-1"></i> All Users
        </h6>
        <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="dropdownMenuLink">
                <div class="dropdown-header">Actions:</div>
                <a class="dropdown-item" href="#"><i class="fas fa-file-export fa-sm fa-fw me-2 text-gray-400"></i>Export</a>
                <a class="dropdown-item" href="#"><i class="fas fa-print fa-sm fa-fw me-2 text-gray-400"></i>Print</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#"><i class="fas fa-cogs fa-sm fa-fw me-2 text-gray-400"></i>Settings</a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover" id="usersTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>User Type</th>
                        <th>User Role</th>
                        <th>Created At</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="avatar avatar-sm me-2 bg-primary rounded-circle">
                                        <span class="avatar-text">@(user.FullName.Substring(0, 1).ToUpper())</span>
                                    </div>
                                    <div>@user.FullName</div>
                                </div>
                            </td>
                            <td>@user.Email</td>
                            <td>
                                @if (user.UserType == "Admin")
                                {
                                    <span class="badge bg-danger">@user.UserType</span>
                                }
                                else if (user.UserType == "ClubManager")
                                {
                                    <span class="badge bg-success">@user.UserType</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary">@user.UserType</span>
                                }
                            </td>
                            <td>
                                <span class="badge bg-info">@user.UserRole</span>
                            </td>
                            <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                            <td>
                                @if (user.IsActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Inactive</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="EditUser" asp-route-id="@user.Id" class="btn btn-primary btn-sm" title="Edit User">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-danger btn-sm" title="Delete User"
                                            data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                            data-user-id="@user.Id" data-user-name="@user.FullName" data-user-email="@user.Email">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user <strong id="deleteUserName"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteUserForm" asp-action="DeleteUser" method="post">
                    <input type="hidden" id="deleteUserId" name="id" />
                    <input type="hidden" id="deleteUserNameInput" name="userName" />
                    <input type="hidden" id="deleteUserEmailInput" name="email" />
                    <button type="submit" class="btn btn-danger">Delete User</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#usersTable').DataTable({
                "order": [[4, "desc"]]
            });

            // Set up delete user modal
            $('#deleteUserModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var userId = button.data('user-id');
                var userName = button.data('user-name');
                var userEmail = button.data('user-email');

                console.log('Delete user modal opened for user: ' + userName + ', email: ' + userEmail);

                // Set the ID, name, and email in the form
                $('#deleteUserId').val(userId);
                $('#deleteUserNameInput').val(userName);
                $('#deleteUserEmailInput').val(userEmail);
                $('#deleteUserName').text(userName);
            });

            // Add form submission handler to ensure all required fields are included
            $('#deleteUserForm').on('submit', function(e) {
                var userId = $('#deleteUserId').val();
                var userName = $('#deleteUserNameInput').val();
                var userEmail = $('#deleteUserEmailInput').val();

                if (!userEmail) {
                    e.preventDefault();
                    alert('Error: User email is missing. Please try again.');
                    console.error('Form submission prevented: User email is missing');
                    return false;
                }

                if (!userName) {
                    e.preventDefault();
                    alert('Error: User name is missing. Please try again.');
                    console.error('Form submission prevented: User name is missing');
                    return false;
                }

                console.log('Submitting delete form for user: ' + userName + ' (Email: ' + userEmail + ')');
            });
        });
    </script>
}

<style>
    .avatar {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .avatar-text {
        color: white;
        font-weight: bold;
    }
</style>
