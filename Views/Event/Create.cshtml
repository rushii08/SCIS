@model SCIS.ViewModels.EventViewModel

@{
    ViewData["Title"] = "Create Event";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Create New Event</h1>
    <a asp-action="Index" class="d-none d-sm-inline-block btn btn-secondary shadow-sm">
        <i class="fas fa-arrow-left fa-sm text-white-50 me-2"></i>Back to List
    </a>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Event Information</h6>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ClubId" class="form-label"></label>
                        <select asp-for="ClubId" asp-items="Model.AvailableClubs" class="form-select">
                            <option value="">-- Select Club --</option>
                        </select>
                        <span asp-validation-for="ClubId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EventDate" class="form-label"></label>
                        <input asp-for="EventDate" class="form-control" type="datetime-local" value="@DateTime.Now.AddDays(7).ToString("yyyy-MM-ddTHH:mm")" />
                        <span asp-validation-for="EventDate" class="text-danger"></span>
                        <small class="form-text text-muted">Select the date and time for the event</small>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Location" class="form-label">Location</label>
                        <input asp-for="Location" class="form-control" placeholder="Enter event location" />
                        <span asp-validation-for="Location" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="SeatLimit" class="form-label"></label>
                        <input asp-for="SeatLimit" class="form-control" type="number" min="1" max="1000" />
                        <span asp-validation-for="SeatLimit" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <a asp-action="Index" class="btn btn-secondary me-md-2">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-1"></i> Create Event
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function() {
            // Display any TempData errors
            @foreach (var key in TempData.Keys)
            {
                if (key.ToString().StartsWith("Error_"))
                {
                    <text>
                    console.log("TempData error: @key = @TempData[key]");
                    </text>
                }
            }

            // Add form submission handler
            $('form').on('submit', function(e) {
                // Validate required fields
                var isValid = true;

                // Check Name
                if (!$('#Name').val()) {
                    isValid = false;
                    $('#Name').addClass('is-invalid');
                    $('[data-valmsg-for="Name"]').text('Event name is required').show();
                }

                // Check ClubId
                if (!$('#ClubId').val()) {
                    isValid = false;
                    $('#ClubId').addClass('is-invalid');
                    $('[data-valmsg-for="ClubId"]').text('Club is required').show();
                }

                // Check EventDate
                if (!$('#EventDate').val()) {
                    isValid = false;
                    $('#EventDate').addClass('is-invalid');
                    $('[data-valmsg-for="EventDate"]').text('Event date is required').show();
                } else {
                    // Check if date is in the future
                    var eventDate = new Date($('#EventDate').val());
                    var now = new Date();
                    if (eventDate <= now) {
                        isValid = false;
                        $('#EventDate').addClass('is-invalid');
                        $('[data-valmsg-for="EventDate"]').text('Event date must be in the future').show();
                    }
                }

                // Check Location
                if (!$('#Location').val()) {
                    isValid = false;
                    $('#Location').addClass('is-invalid');
                    $('[data-valmsg-for="Location"]').text('Location is required').show();
                }

                // Check SeatLimit
                if (!$('#SeatLimit').val() || $('#SeatLimit').val() < 1) {
                    isValid = false;
                    $('#SeatLimit').addClass('is-invalid');
                    $('[data-valmsg-for="SeatLimit"]').text('Seat limit must be at least 1').show();
                }

                if (!isValid) {
                    e.preventDefault();
                    console.log('Form validation failed');
                    return false;
                }

                console.log('Form validation passed, submitting...');
                return true;
            });

            // Clear validation errors when field is changed
            $('input, textarea, select').on('change', function() {
                $(this).removeClass('is-invalid');
                $('[data-valmsg-for="' + $(this).attr('id') + '"]').text('').hide();
            });
        });
    </script>
}
